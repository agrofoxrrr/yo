import React from 'react';
import './App.css'

const questions = [
  {
    title: '–ö–∞–∫–æ–π –º–æ–π –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç?',
    variants: ['—Ä–æ–∑–æ–≤—ã–π', '—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π', '–æ—Ä–∞–Ω–∂–µ–≤—ã–π','–∑–µ–ª–µ–Ω—ã–π',],
    correct: 0,
  },
  {
    title: '–ú–æ–π –ª—é–±–∏–º–∞—è —Å–ª–∞–¥–æ—Å—Ç—å...',
    variants: ['–±–∞—Ç–æ–Ω—á–∏–∫ –±–∞—É–Ω—Ç–∏', '—Å–∫–∏—Ç–ª—Å', '—Ç–µ–º–Ω—ã–π —à–æ–∫–æ–ª–∞–¥','–º–∞—Ä—à–º–µ–ª–ª–æ—É'],
    correct: 1,
  },
  {
    title: '–ú–æ—è –ª—é–±–∏–º–∞—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –∏–≥—Ä–∞...',
    variants: [
      '–≥–µ–Ω—à–∏–Ω –∏–º–ø–∞–∫—Ç',
      '—Ö–æ–Ω–∫–∞–π —Å—Ç–∞—Ä —Ä–µ–∏–ª',
      '–¥–æ—Ç–∞ 2',
      '—Ñ–∞–∑–º–æ—Ñ–æ–±–∏—è',

    ],
    correct: 1,
  },
  {
    title: '–ú–æ–π –ª—é–±–∏–º—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –∏–∑ –û—Ç–µ–ª—è –•–∞–∑–±–∏–Ω?',
    variants: [
      '–≠–Ω–¥–∂–µ–ª –î–∞—Å—Ç',
      '–ê–ª–∞—Å—Ç–æ—Ä',
      '–ê–¥–∞–º',
      '–°—ç—Ä–∞',
      '–í–æ–∫—Å',
    ],
    correct: 2,
  },
];

function Result({correct}) {
  return (
    <div className="result">
      <img src="https://cdn-icons-png.flaticon.com/512/2278/2278992.png" />
      <h2>–í—ã –æ—Ç–≥–∞–¥–∞–ª–∏ {correct} –æ—Ç–≤–µ—Ç–∞ –∏–∑ {questions.length}</h2>
      <a href="/">
        {
          correct === 0 ? 
          (<button>—Å–º–∏—Ä–∏—Å—å,—Ç—ã ‚û° ü§°</button>):
          correct !== questions.length ?
          (<button>–ø—ã—Ç–∞–π—Å—è –µ—â–µ</button>):
          (<button>–æ–ø—è—Ç—å –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–æ</button>)
        }
      </a>
    </div>
  );
}

function Game({step, question, onClickVariant}) {
  const progress = Math.round(step / questions.length * 100); 
  return (
    <>
      <div className="progress">
        <div style={{ width: `${progress}%` }} className="progress__inner"></div>
      </div>
      <h1>{question.title}</h1>
      <ul>
        {
          question.variants.map((text, index) => (
            <li onClick={() => onClickVariant(index)} key={text}>{text}</li>
          ))}
      </ul>
    </>
  );
}

function App() {
  const [step, SetStep] = React.useState(0);
  const [correct, SetCorrect] = React.useState(0);
  const question = questions[step];

  const onClickVariant = (index) => 
  {
    SetStep(step + 1);
    if (question.correct === index){
      SetCorrect(correct + 1);
    }
  }

  return (
    <div className="App">
      {
        step !== questions.length ? 
        (<Game step={step} question={question} onClickVariant={onClickVariant}/>): 
        (<Result correct={correct}/>)
      }
    </div>
  );
}

export default App;